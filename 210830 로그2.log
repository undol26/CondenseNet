gdb --args python main.py --model condensenet -b 64 -j 1 cifar10 --epochs 10 --lr-type cosine --stages 14-14-14 --growth 8-16-32 --bottleneck 4 --group-1x1 4 --group-3x3 4 --condense-factor 4 --gpu 0
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from python...(no debugging symbols found)...done.
(gdb) run
Starting program: /usr/local/bin/python main.py --model condensenet -b 64 -j 1 cifar10 --epochs 10 --lr-type cosine --stages 14-14-14 --growth 8-16-32 --bottleneck 4 --group-1x1 4 --group-3x3 4 --condense-factor 4 --gpu 0
warning: Error disabling address space randomization: Operation not permitted
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7f527225a700 (LWP 10192)]
[New Thread 0x7f5271a59700 (LWP 10193)]
[New Thread 0x7f5261258700 (LWP 10194)]
[New Thread 0x7f5258a57700 (LWP 10195)]
[New Thread 0x7f5250256700 (LWP 10196)]
[New Thread 0x7f5247a55700 (LWP 10197)]
[New Thread 0x7f5247254700 (LWP 10198)]
[New Thread 0x7f522f6fb700 (LWP 10213)]
[New Thread 0x7f522eefa700 (LWP 10214)]
[New Thread 0x7f522e6f9700 (LWP 10215)]
CondenseNet(
  (features): Sequential(
    (init_conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (denseblock_1): _DenseBlock(
      (denselayer_1): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_2): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(24, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_3): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_4): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(40, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_5): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(48, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_6): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(56, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_7): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_8): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(72, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_9): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(80, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_10): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(88, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_11): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(96, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_12): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(104, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_13): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(112, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_14): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
    )
    (transition_1): _Transition(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock_2): _DenseBlock(
      (denselayer_1): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_2): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(144, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_3): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(160, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_4): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(176, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_5): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_6): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(208, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_7): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(224, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_8): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(240, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_9): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_10): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(272, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(272, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_11): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(288, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_12): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(304, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(304, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_13): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_14): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(336, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
    )
    (transition_2): _Transition(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock_3): _DenseBlock(
      (denselayer_1): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_2): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_3): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_4): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_5): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_6): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_7): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_8): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_9): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_10): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_11): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_12): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_13): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
      (denselayer_14): _DenseLayer(
        (conv_1): LearnedGroupConv(
          (norm): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (conv_2): Conv(
          (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        )
      )
    )
    (norm_last): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu_last): ReLU(inplace=True)
    (pool_last): AvgPool2d(kernel_size=8, stride=8, padding=0)
  )
  (classifier): Linear(in_features=800, out_features=10, bias=True)
)
[W NNPACK.cpp:79] Could not initialize NNPACK! Reason: Unsupported hardware.
FLOPs: 65.82M, Params: 0.52M
Namespace(batch_size=64, bottleneck=4, condense_factor=4, convert_from=None, data='cifar10', dropout_rate=0, epochs=10, evaluate=False, evaluate_from=None, filename='condensenet_520202_65816394.txt', gpu='0', group_1x1=4, group_3x3=4, group_lasso_lambda=0.0, growth=[8, 16, 32], lr=0.1, lr_type='cosine', manual_seed=0, model='condensenet', momentum=0.9, no_save_model=False, num_classes=10, pretrained=False, print_freq=10, reduction=0.5, resume=False, savedir='results/savedir', stages=[14, 14, 14], start_epoch=0, weight_decay=0.0001, workers=1)
[New Thread 0x7f52260cd700 (LWP 10219)]
[New Thread 0x7f52258cc700 (LWP 10220)]
[New Thread 0x7f52250cb700 (LWP 10221)]
Files already downloaded and verified
[Thread 0x7f5247254700 (LWP 10198) exited]
[Thread 0x7f5247a55700 (LWP 10197) exited]
[Thread 0x7f5250256700 (LWP 10196) exited]
[Thread 0x7f5258a57700 (LWP 10195) exited]
[Thread 0x7f5261258700 (LWP 10194) exited]
[Thread 0x7f5271a59700 (LWP 10193) exited]
[Thread 0x7f527225a700 (LWP 10192) exited]
[New Thread 0x7f5247254700 (LWP 10250)]
[New Thread 0x7f5247a55700 (LWP 10251)]
[New Thread 0x7f5250256700 (LWP 10252)]
[New Thread 0x7f5258a57700 (LWP 10253)]
[New Thread 0x7f527225a700 (LWP 10261)]
[New Thread 0x7f5271a59700 (LWP 10262)]
[New Thread 0x7f5261258700 (LWP 10263)]
[New Thread 0x7f521dfff700 (LWP 10264)]
[Thread 0x7f521dfff700 (LWP 10264) exited]
[Thread 0x7f5261258700 (LWP 10263) exited]
[Thread 0x7f5271a59700 (LWP 10262) exited]
[Thread 0x7f527225a700 (LWP 10261) exited]
[Thread 0x7f5258a57700 (LWP 10253) exited]
[Thread 0x7f5250256700 (LWP 10252) exited]
[Thread 0x7f5247a55700 (LWP 10251) exited]
[New Thread 0x7f521dfff700 (LWP 10265)]
@@@@@@@@@
k: 0
@@@@@@@@@
@@@@@@@@@
k2: 0
@@@@@@@@@

Thread 1 "python" received signal SIGSEGV, Segmentation fault.
0x00007f527580cdb1 in c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::release_cached_blocks() () from /usr/local/lib/python3.6/dist-packages/torch/lib/libc10_cuda.so
